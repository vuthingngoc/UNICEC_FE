{"ast":null,"code":"import _defineProperty from \"C:/Users/PC/Desktop/UNICS_FE/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/PC/Desktop/UNICS_FE/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/PC/Desktop/UNICS_FE/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/PC/Desktop/UNICS_FE/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"tag\", \"key\", \"disabled\", \"onRemove\", \"classNameRemove\", \"getTagDisplayValue\"],\n    _excluded2 = [\"addTag\"],\n    _excluded3 = [\"onChange\", \"value\"],\n    _excluded4 = [\"value\", \"onChange\", \"tagProps\", \"renderLayout\", \"renderTag\", \"renderInput\", \"addKeys\", \"removeKeys\", \"className\", \"focusedClassName\", \"addOnBlur\", \"addOnPaste\", \"inputProps\", \"pasteSplit\", \"onlyUnique\", \"maxTags\", \"validate\", \"validationRegex\", \"disabled\", \"tagDisplayProp\", \"inputValue\", \"onChangeInput\"],\n    _excluded5 = [\"onChange\", \"onFocus\", \"onBlur\"];\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\UNICS_FE\\\\src\\\\components\\\\TagsInput\\\\TagsInput.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction uniq(arr) {\n  var out = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (out.indexOf(arr[i]) === -1) {\n      out.push(arr[i]);\n    }\n  }\n\n  return out;\n}\n/* istanbul ignore next */\n\n\nfunction getClipboardData(e) {\n  if (window.clipboardData) {\n    return window.clipboardData.getData(\"Text\");\n  }\n\n  if (e.clipboardData) {\n    return e.clipboardData.getData(\"text/plain\");\n  }\n\n  return \"\";\n}\n\nfunction defaultRenderTag(props) {\n  var tag = props.tag,\n      key = props.key,\n      disabled = props.disabled,\n      onRemove = props.onRemove,\n      classNameRemove = props.classNameRemove,\n      getTagDisplayValue = props.getTagDisplayValue,\n      other = _objectWithoutProperties(props, _excluded);\n\n  return /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, other), {}, {\n    children: [getTagDisplayValue(tag), !disabled && /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classNameRemove,\n      onClick: function onClick(e) {\n        return onRemove(key);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }), key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\ndefaultRenderTag.propTypes = {\n  key: PropTypes.number,\n  tag: PropTypes.string,\n  onRemove: PropTypes.func,\n  classNameRemove: PropTypes.string,\n  getTagDisplayValue: PropTypes.func\n};\n\nfunction defaultRenderInput(_ref) {\n  var addTag = _ref.addTag,\n      props = _objectWithoutProperties(_ref, _excluded2);\n\n  var onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, _excluded3);\n\n  return /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n    type: \"text\",\n    onChange: onChange,\n    value: value\n  }, other), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n}\n\ndefaultRenderInput.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  addTag: PropTypes.func\n};\n\nfunction defaultRenderLayout(tagComponents, inputComponent) {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [tagComponents, inputComponent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\nfunction defaultPasteSplit(data) {\n  return data.split(\" \").map(function (d) {\n    return d.trim();\n  });\n}\n\nvar defaultInputProps = {\n  className: \"react-tagsinput-input\",\n  placeholder: \"Add a tag\"\n};\nvar TagsInput = /*#__PURE__*/React.forwardRef(_c = _s(function (props, ref) {\n  _s();\n\n  var divElementRef = React.useRef(null);\n  var inputElementRef = React.useRef(null);\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tagState = _React$useState2[0],\n      setTagState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isFocusedState = _React$useState4[0],\n      setIsFocusedState = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (hasControlledInputHook() && !inputValueHook(props)) {} else {\n      setTagState(inputValueHook(props));\n    }\n  }, [props]);\n\n  var value = props.value,\n      onChange = props.onChange,\n      tagProps = props.tagProps,\n      renderLayout = props.renderLayout,\n      renderTag = props.renderTag,\n      renderInput = props.renderInput,\n      addKeys = props.addKeys,\n      removeKeys = props.removeKeys,\n      className = props.className,\n      focusedClassName = props.focusedClassName,\n      addOnBlur = props.addOnBlur,\n      addOnPaste = props.addOnPaste,\n      inputProps = props.inputProps,\n      pasteSplit = props.pasteSplit,\n      onlyUnique = props.onlyUnique,\n      maxTags = props.maxTags,\n      validate = props.validate,\n      validationRegex = props.validationRegex,\n      disabled = props.disabled,\n      tagDisplayProp = props.tagDisplayProp,\n      inputValue = props.inputValue,\n      onChangeInput = props.onChangeInput,\n      other = _objectWithoutProperties(props, _excluded4);\n\n  var _getTagDisplayValueHook = function _getTagDisplayValueHook(tagInner) {\n    if (tagDisplayProp) {\n      return tagInner[tagDisplayProp];\n    }\n\n    return tagInner;\n  };\n\n  var _makeTagHook = function _makeTagHook(tagInner) {\n    if (tagDisplayProp) {\n      return _defineProperty({}, tagDisplayProp, tagInner);\n    }\n\n    return tagInner;\n  };\n\n  var _removeTagHook = function _removeTagHook(indexInner) {\n    var valueInner = value.concat([]);\n\n    if (indexInner > -1 && indexInner < valueInner.length) {\n      var changed = valueInner.splice(indexInner, 1);\n      onChange(valueInner, changed, [indexInner]);\n    }\n  };\n\n  var _clearInputHook = function _clearInputHook() {\n    if (hasControlledInputHook()) {\n      onChangeInput(\"\");\n    } else {\n      setTagState(\"\");\n    }\n  };\n\n  var _tagHook = function _tagHook() {\n    if (hasControlledInputHook()) {\n      return inputValue;\n    }\n\n    return tagState;\n  };\n\n  var _addTagsHook = function _addTagsHook(tagsInner) {\n    var onValidationReject = props.onValidationReject;\n\n    if (onlyUnique) {\n      tagsInner = uniq(tagsInner);\n      tagsInner = tagsInner.filter(function (tag) {\n        return value.every(function (currentTag) {\n          return _getTagDisplayValueHook(currentTag) !== _getTagDisplayValueHook(tag);\n        });\n      });\n    }\n\n    var rejectedTags = tagsInner.filter(function (tag) {\n      return !_validateHook(_getTagDisplayValueHook(tag));\n    });\n    tagsInner = tagsInner.filter(function (tag) {\n      return _validateHook(_getTagDisplayValueHook(tag));\n    });\n    tagsInner = tagsInner.filter(function (tag) {\n      var tagDisplayValueInner = _getTagDisplayValueHook(tag);\n\n      if (typeof tagDisplayValueInner.trim === \"function\") {\n        return tagDisplayValueInner.trim().length > 0;\n      } else {\n        return tagDisplayValueInner;\n      }\n    });\n\n    if (maxTags >= 0) {\n      var remainingLimitInner = Math.max(maxTags - value.length, 0);\n      tagsInner = tagsInner.slice(0, remainingLimitInner);\n    }\n\n    if (onValidationReject && rejectedTags.length > 0) {\n      onValidationReject(rejectedTags);\n    }\n\n    if (tagsInner.length > 0) {\n      var newValueInner = value.concat(tagsInner);\n      var indexesInner = [];\n\n      for (var i = 0; i < tagsInner.length; i++) {\n        indexesInner.push(value.length + i);\n      }\n\n      onChange(newValueInner, tagsInner, indexesInner);\n\n      _clearInputHook();\n\n      return true;\n    }\n\n    if (rejectedTags.length > 0) {\n      return false;\n    }\n\n    _clearInputHook();\n\n    return false;\n  };\n\n  var _validateHook = function _validateHook(tagInner) {\n    return validate(tagInner) && validationRegex.test(tagInner);\n  };\n\n  var _shouldPreventDefaultEventOnAddHook = function _shouldPreventDefaultEventOnAddHook(addedInner, emptyInner, keyCodeInner) {\n    if (addedInner) {\n      return true;\n    }\n\n    if (keyCodeInner === 13) {\n      return props.preventSubmit || !props.preventSubmit && !emptyInner;\n    }\n\n    return false;\n  };\n\n  var focusHook = function focusHook() {\n    if (inputElementRef.current && typeof inputElementRef.current.focus === \"function\") {\n      inputElementRef.current.focus();\n    }\n\n    handleOnFocusHook();\n  };\n\n  var blurHook = function blurHook() {\n    if (inputElementRef.current && typeof inputElementRef.current.blur === \"function\") {\n      inputElementRef.current.blur();\n    }\n\n    handleOnBlurHook();\n  };\n\n  var acceptHook = function acceptHook() {\n    var tagInner = _tagHook();\n\n    if (tagInner !== \"\") {\n      tagInner = _makeTagHook(tagInner);\n      return _addTagsHook([tagInner]);\n    }\n\n    return false;\n  };\n\n  var addTagHook = function addTagHook(tagInner) {\n    return _addTagsHook([tagInner]);\n  };\n\n  var clearInputHook = function clearInputHook() {\n    _clearInputHook();\n  };\n\n  var handlePasteHook = function handlePasteHook(e) {\n    if (!addOnPaste) {\n      return;\n    }\n\n    e.preventDefault();\n    var dataInner = getClipboardData(e);\n    var tagsInner = pasteSplit(dataInner).map(function (tagInner) {\n      return _makeTagHook(tagInner);\n    });\n\n    _addTagsHook(tagsInner);\n  };\n\n  var handleKeyDownHook = function handleKeyDownHook(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    var tagInner = _tagHook();\n\n    var emptyInner = tagInner === \"\";\n    var keyCodeInner = e.keyCode;\n    var keyInner = e.key;\n    var addInner = addKeys.indexOf(keyCodeInner) !== -1 || addKeys.indexOf(keyInner) !== -1;\n    var removeInner = removeKeys.indexOf(keyCodeInner) !== -1 || removeKeys.indexOf(keyInner) !== -1;\n\n    if (addInner) {\n      var addedInner = acceptHook();\n\n      if (_shouldPreventDefaultEventOnAddHook(addedInner, emptyInner, keyCodeInner)) {\n        e.preventDefault();\n      }\n    }\n\n    if (removeInner && value.length > 0 && emptyInner) {\n      e.preventDefault();\n\n      _removeTagHook(value.length - 1);\n    }\n  };\n\n  var handleClickHook = function handleClickHook(e) {\n    if (e.target === divElementRef.current) {\n      focusHook();\n    }\n  };\n\n  var handleChangeHook = function handleChangeHook(e) {\n    var onChange = props.inputProps.onChange;\n    var tagInner = e.target.value;\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (hasControlledInputHook()) {\n      onChangeInput(tagInner);\n    } else {\n      setTagState(tagInner);\n    }\n  };\n\n  var handleOnFocusHook = function handleOnFocusHook(e) {\n    var onFocus = props.inputProps.onFocus;\n\n    if (onFocus) {\n      onFocus(e);\n    }\n\n    setIsFocusedState(true);\n  };\n\n  var handleOnBlurHook = function handleOnBlurHook(e) {\n    var onBlur = props.inputProps.onBlur;\n    setIsFocusedState(false);\n\n    if (e == null) {\n      return;\n    }\n\n    if (onBlur) {\n      onBlur(e);\n    }\n\n    if (addOnBlur) {\n      var tagInner = _makeTagHook(e.target.value);\n\n      _addTagsHook([tagInner]);\n    }\n  };\n\n  var handleRemoveHook = function handleRemoveHook(tagInner) {\n    _removeTagHook(tagInner);\n  };\n\n  var inputPropsHook = function inputPropsHook() {\n    // eslint-disable-next-line\n    var _props$inputProps = props.inputProps,\n        onChange = _props$inputProps.onChange,\n        onFocus = _props$inputProps.onFocus,\n        onBlur = _props$inputProps.onBlur,\n        otherInputProps = _objectWithoutProperties(_props$inputProps, _excluded5);\n\n    var propsInner = _objectSpread(_objectSpread({}, defaultInputProps), otherInputProps);\n\n    if (disabled) {\n      propsInner.disabled = true;\n    }\n\n    return propsInner;\n  };\n\n  var inputValueHook = function inputValueHook(propsInner) {\n    return propsInner.currentValue || propsInner.inputValue || \"\";\n  };\n\n  var hasControlledInputHook = function hasControlledInputHook() {\n    return typeof onChangeInput === \"function\" && typeof inputValue === \"string\";\n  };\n\n  var divClassName = className;\n\n  if (isFocusedState) {\n    divClassName = className + \" \" + focusedClassName;\n  }\n\n  var tagComponents = value.map(function (tag, index) {\n    return renderTag(_objectSpread({\n      key: index,\n      tag: tag,\n      onRemove: handleRemoveHook,\n      disabled: disabled,\n      getTagDisplayValue: _getTagDisplayValueHook\n    }, tagProps));\n  });\n  var inputComponent = renderInput(_objectSpread({\n    ref: inputElementRef,\n    value: _tagHook(),\n    onPaste: handlePasteHook,\n    onKeyDown: handleKeyDownHook,\n    onChange: handleChangeHook,\n    onFocus: handleOnFocusHook,\n    onBlur: handleOnBlurHook,\n    addTag: addTagHook\n  }, inputPropsHook()));\n  React.useImperativeHandle(ref, function () {\n    return {\n      _getDivElementRef: divElementRef.current,\n      _getInputElementRef: inputElementRef.current,\n      props: props,\n      _getTagState: tagState,\n      _getTagDisplayValue: function _getTagDisplayValue(tagInner) {\n        return _getTagDisplayValueHook(tagInner);\n      },\n      _makeTag: function _makeTag(tagInner) {\n        return _makeTagHook(tagInner);\n      },\n      _removeTag: function _removeTag(indexInner) {\n        _removeTagHook(indexInner);\n      },\n      _clearInput: function _clearInput() {\n        _clearInputHook();\n      },\n      _tag: function _tag() {\n        return _tagHook();\n      },\n      _addTags: function _addTags(tagsInner) {\n        return _addTagsHook(tagsInner);\n      },\n      _validate: function _validate(tagInner) {\n        return _validateHook(tagInner);\n      },\n      _shouldPreventDefaultEventOnAdd: function _shouldPreventDefaultEventOnAdd(addedInner, emptyInner, keyCodeInner) {\n        return _shouldPreventDefaultEventOnAddHook(addedInner, emptyInner, keyCodeInner);\n      },\n      focus: function focus() {\n        focusHook();\n      },\n      blur: function blur() {\n        blurHook();\n      },\n      accept: function accept() {\n        return acceptHook();\n      },\n      addTag: function addTag(tagInner) {\n        return addTagHook(tagInner);\n      },\n      clearInput: function clearInput() {\n        clearInputHook();\n      },\n      handlePaste: function handlePaste(e) {\n        handlePasteHook(e);\n      },\n      handleKeyDown: function handleKeyDown(e) {\n        handleKeyDownHook(e);\n      },\n      handleClick: function handleClick(e) {\n        handleClickHook(e);\n      },\n      handleChange: function handleChange(e) {\n        handleChangeHook(e);\n      },\n      handleOnFocus: function handleOnFocus(e) {\n        handleOnFocusHook(e);\n      },\n      handleOnBlur: function handleOnBlur(e) {\n        handleOnBlurHook(e);\n      },\n      handleRemove: function handleRemove(tagInner) {\n        handleRemoveHook(tagInner);\n      },\n      inputProps: function inputProps() {\n        return inputPropsHook();\n      },\n      inputValue: function inputValue(propsInner) {\n        return inputValueHook(propsInner);\n      },\n      hasControlledInput: function hasControlledInput() {\n        return hasControlledInputHook();\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: divElementRef,\n    onClick: handleClickHook,\n    className: divClassName,\n    children: renderLayout(tagComponents, inputComponent)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 541,\n    columnNumber: 5\n  }, _this);\n}, \"b85Iq6m9m+Zf3JB2VYhWMTGcJA8=\", false, function () {\n  return [React.useImperativeHandle];\n}));\n_c2 = TagsInput;\nTagsInput.defaultProps = {\n  className: \"react-tagsinput\",\n  focusedClassName: \"react-tagsinput--focused\",\n  addKeys: [9, 13],\n  addOnBlur: false,\n  addOnPaste: false,\n  inputProps: {},\n  removeKeys: [8],\n  renderInput: defaultRenderInput,\n  renderTag: defaultRenderTag,\n  renderLayout: defaultRenderLayout,\n  pasteSplit: defaultPasteSplit,\n  tagProps: {\n    className: \"react-tagsinput-tag\",\n    classNameRemove: \"react-tagsinput-remove\"\n  },\n  onlyUnique: false,\n  maxTags: -1,\n  validate: function validate() {\n    return true;\n  },\n  validationRegex: /.*/,\n  disabled: false,\n  tagDisplayProp: null,\n  preventSubmit: true\n};\nTagsInput.propTypes = {\n  focusedClassName: PropTypes.string,\n  addKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  addOnBlur: PropTypes.bool,\n  addOnPaste: PropTypes.bool,\n  currentValue: PropTypes.string,\n  inputValue: PropTypes.string,\n  inputProps: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n  onChangeInput: PropTypes.func,\n  removeKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  renderInput: PropTypes.func,\n  renderTag: PropTypes.func,\n  renderLayout: PropTypes.func,\n  pasteSplit: PropTypes.func,\n  tagProps: PropTypes.object,\n  onlyUnique: PropTypes.bool,\n  value: PropTypes.array.isRequired,\n  maxTags: PropTypes.number,\n  validate: PropTypes.func,\n  validationRegex: PropTypes.instanceOf(RegExp),\n  disabled: PropTypes.bool,\n  tagDisplayProp: PropTypes.string,\n  preventSubmit: PropTypes.bool\n};\nexport default TagsInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TagsInput$React.forwardRef\");\n$RefreshReg$(_c2, \"TagsInput\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/UNICS_FE/src/components/TagsInput/TagsInput.js"],"names":["React","PropTypes","uniq","arr","out","i","length","indexOf","push","getClipboardData","e","window","clipboardData","getData","defaultRenderTag","props","tag","key","disabled","onRemove","classNameRemove","getTagDisplayValue","other","propTypes","number","string","func","defaultRenderInput","addTag","onChange","value","defaultRenderLayout","tagComponents","inputComponent","defaultPasteSplit","data","split","map","d","trim","defaultInputProps","className","placeholder","TagsInput","forwardRef","ref","divElementRef","useRef","inputElementRef","useState","tagState","setTagState","isFocusedState","setIsFocusedState","useEffect","hasControlledInputHook","inputValueHook","tagProps","renderLayout","renderTag","renderInput","addKeys","removeKeys","focusedClassName","addOnBlur","addOnPaste","inputProps","pasteSplit","onlyUnique","maxTags","validate","validationRegex","tagDisplayProp","inputValue","onChangeInput","_getTagDisplayValueHook","tagInner","_makeTagHook","_removeTagHook","indexInner","valueInner","concat","changed","splice","_clearInputHook","_tagHook","_addTagsHook","tagsInner","onValidationReject","filter","every","currentTag","rejectedTags","_validateHook","tagDisplayValueInner","remainingLimitInner","Math","max","slice","newValueInner","indexesInner","test","_shouldPreventDefaultEventOnAddHook","addedInner","emptyInner","keyCodeInner","preventSubmit","focusHook","current","focus","handleOnFocusHook","blurHook","blur","handleOnBlurHook","acceptHook","addTagHook","clearInputHook","handlePasteHook","preventDefault","dataInner","handleKeyDownHook","defaultPrevented","keyCode","keyInner","addInner","removeInner","handleClickHook","target","handleChangeHook","onFocus","onBlur","handleRemoveHook","inputPropsHook","otherInputProps","propsInner","currentValue","divClassName","index","onPaste","onKeyDown","useImperativeHandle","_getDivElementRef","_getInputElementRef","_getTagState","_getTagDisplayValue","_makeTag","_removeTag","_clearInput","_tag","_addTags","_validate","_shouldPreventDefaultEventOnAdd","accept","clearInput","handlePaste","handleKeyDown","handleClick","handleChange","handleOnFocus","handleOnBlur","handleRemove","hasControlledInput","defaultProps","arrayOf","oneOfType","bool","object","isRequired","array","instanceOf","RegExp"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction uniq(arr) {\n  let out = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    if (out.indexOf(arr[i]) === -1) {\n      out.push(arr[i]);\n    }\n  }\n\n  return out;\n}\n\n/* istanbul ignore next */\nfunction getClipboardData(e) {\n  if (window.clipboardData) {\n    return window.clipboardData.getData(\"Text\");\n  }\n\n  if (e.clipboardData) {\n    return e.clipboardData.getData(\"text/plain\");\n  }\n\n  return \"\";\n}\n\nfunction defaultRenderTag(props) {\n  let {\n    tag,\n    key,\n    disabled,\n    onRemove,\n    classNameRemove,\n    getTagDisplayValue,\n    ...other\n  } = props;\n  return (\n    <span key={key} {...other}>\n      {getTagDisplayValue(tag)}\n      {!disabled && (\n        <a className={classNameRemove} onClick={(e) => onRemove(key)} />\n      )}\n    </span>\n  );\n}\n\ndefaultRenderTag.propTypes = {\n  key: PropTypes.number,\n  tag: PropTypes.string,\n  onRemove: PropTypes.func,\n  classNameRemove: PropTypes.string,\n  getTagDisplayValue: PropTypes.func,\n};\n\nfunction defaultRenderInput({ addTag, ...props }) {\n  let { onChange, value, ...other } = props;\n  return <input type=\"text\" onChange={onChange} value={value} {...other} />;\n}\n\ndefaultRenderInput.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  addTag: PropTypes.func,\n};\n\nfunction defaultRenderLayout(tagComponents, inputComponent) {\n  return (\n    <span>\n      {tagComponents}\n      {inputComponent}\n    </span>\n  );\n}\n\nfunction defaultPasteSplit(data) {\n  return data.split(\" \").map((d) => d.trim());\n}\n\nconst defaultInputProps = {\n  className: \"react-tagsinput-input\",\n  placeholder: \"Add a tag\",\n};\n\nconst TagsInput = React.forwardRef((props, ref) => {\n  const divElementRef = React.useRef(null);\n  const inputElementRef = React.useRef(null);\n  const [tagState, setTagState] = React.useState(\"\");\n  const [isFocusedState, setIsFocusedState] = React.useState(false);\n  React.useEffect(() => {\n    if (hasControlledInputHook() && !inputValueHook(props)) {\n    } else {\n      setTagState(inputValueHook(props));\n    }\n  }, [props]);\n  const {\n    value,\n    onChange,\n    tagProps,\n    renderLayout,\n    renderTag,\n    renderInput,\n    addKeys,\n    removeKeys,\n    className,\n    focusedClassName,\n    addOnBlur,\n    addOnPaste,\n    inputProps,\n    pasteSplit,\n    onlyUnique,\n    maxTags,\n    validate,\n    validationRegex,\n    disabled,\n    tagDisplayProp,\n    inputValue,\n    onChangeInput,\n    ...other\n  } = props;\n  const _getTagDisplayValueHook = (tagInner) => {\n    if (tagDisplayProp) {\n      return tagInner[tagDisplayProp];\n    }\n\n    return tagInner;\n  };\n\n  const _makeTagHook = (tagInner) => {\n    if (tagDisplayProp) {\n      return {\n        [tagDisplayProp]: tagInner,\n      };\n    }\n\n    return tagInner;\n  };\n\n  const _removeTagHook = (indexInner) => {\n    let valueInner = value.concat([]);\n    if (indexInner > -1 && indexInner < valueInner.length) {\n      let changed = valueInner.splice(indexInner, 1);\n      onChange(valueInner, changed, [indexInner]);\n    }\n  };\n\n  const _clearInputHook = () => {\n    if (hasControlledInputHook()) {\n      onChangeInput(\"\");\n    } else {\n      setTagState(\"\");\n    }\n  };\n\n  const _tagHook = () => {\n    if (hasControlledInputHook()) {\n      return inputValue;\n    }\n\n    return tagState;\n  };\n\n  const _addTagsHook = (tagsInner) => {\n    let { onValidationReject } = props;\n\n    if (onlyUnique) {\n      tagsInner = uniq(tagsInner);\n      tagsInner = tagsInner.filter((tag) =>\n        value.every(\n          (currentTag) =>\n            _getTagDisplayValueHook(currentTag) !== _getTagDisplayValueHook(tag)\n        )\n      );\n    }\n\n    const rejectedTags = tagsInner.filter(\n      (tag) => !_validateHook(_getTagDisplayValueHook(tag))\n    );\n    tagsInner = tagsInner.filter((tag) =>\n      _validateHook(_getTagDisplayValueHook(tag))\n    );\n    tagsInner = tagsInner.filter((tag) => {\n      let tagDisplayValueInner = _getTagDisplayValueHook(tag);\n      if (typeof tagDisplayValueInner.trim === \"function\") {\n        return tagDisplayValueInner.trim().length > 0;\n      } else {\n        return tagDisplayValueInner;\n      }\n    });\n\n    if (maxTags >= 0) {\n      let remainingLimitInner = Math.max(maxTags - value.length, 0);\n      tagsInner = tagsInner.slice(0, remainingLimitInner);\n    }\n\n    if (onValidationReject && rejectedTags.length > 0) {\n      onValidationReject(rejectedTags);\n    }\n\n    if (tagsInner.length > 0) {\n      let newValueInner = value.concat(tagsInner);\n      let indexesInner = [];\n      for (let i = 0; i < tagsInner.length; i++) {\n        indexesInner.push(value.length + i);\n      }\n      onChange(newValueInner, tagsInner, indexesInner);\n      _clearInputHook();\n      return true;\n    }\n\n    if (rejectedTags.length > 0) {\n      return false;\n    }\n\n    _clearInputHook();\n    return false;\n  };\n\n  const _validateHook = (tagInner) => {\n    return validate(tagInner) && validationRegex.test(tagInner);\n  };\n\n  const _shouldPreventDefaultEventOnAddHook = (\n    addedInner,\n    emptyInner,\n    keyCodeInner\n  ) => {\n    if (addedInner) {\n      return true;\n    }\n\n    if (keyCodeInner === 13) {\n      return props.preventSubmit || (!props.preventSubmit && !emptyInner);\n    }\n\n    return false;\n  };\n\n  const focusHook = () => {\n    if (\n      inputElementRef.current &&\n      typeof inputElementRef.current.focus === \"function\"\n    ) {\n      inputElementRef.current.focus();\n    }\n\n    handleOnFocusHook();\n  };\n\n  const blurHook = () => {\n    if (\n      inputElementRef.current &&\n      typeof inputElementRef.current.blur === \"function\"\n    ) {\n      inputElementRef.current.blur();\n    }\n\n    handleOnBlurHook();\n  };\n\n  const acceptHook = () => {\n    let tagInner = _tagHook();\n\n    if (tagInner !== \"\") {\n      tagInner = _makeTagHook(tagInner);\n      return _addTagsHook([tagInner]);\n    }\n\n    return false;\n  };\n\n  const addTagHook = (tagInner) => {\n    return _addTagsHook([tagInner]);\n  };\n\n  const clearInputHook = () => {\n    _clearInputHook();\n  };\n\n  const handlePasteHook = (e) => {\n    if (!addOnPaste) {\n      return;\n    }\n\n    e.preventDefault();\n\n    let dataInner = getClipboardData(e);\n    let tagsInner = pasteSplit(dataInner).map((tagInner) =>\n      _makeTagHook(tagInner)\n    );\n\n    _addTagsHook(tagsInner);\n  };\n\n  const handleKeyDownHook = (e) => {\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    const tagInner = _tagHook();\n    let emptyInner = tagInner === \"\";\n    let keyCodeInner = e.keyCode;\n    let keyInner = e.key;\n    let addInner =\n      addKeys.indexOf(keyCodeInner) !== -1 || addKeys.indexOf(keyInner) !== -1;\n    let removeInner =\n      removeKeys.indexOf(keyCodeInner) !== -1 ||\n      removeKeys.indexOf(keyInner) !== -1;\n\n    if (addInner) {\n      let addedInner = acceptHook();\n      if (\n        _shouldPreventDefaultEventOnAddHook(\n          addedInner,\n          emptyInner,\n          keyCodeInner\n        )\n      ) {\n        e.preventDefault();\n      }\n    }\n\n    if (removeInner && value.length > 0 && emptyInner) {\n      e.preventDefault();\n      _removeTagHook(value.length - 1);\n    }\n  };\n\n  const handleClickHook = (e) => {\n    if (e.target === divElementRef.current) {\n      focusHook();\n    }\n  };\n\n  const handleChangeHook = (e) => {\n    let { onChange } = props.inputProps;\n    let tagInner = e.target.value;\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (hasControlledInputHook()) {\n      onChangeInput(tagInner);\n    } else {\n      setTagState(tagInner);\n    }\n  };\n\n  const handleOnFocusHook = (e) => {\n    let { onFocus } = props.inputProps;\n\n    if (onFocus) {\n      onFocus(e);\n    }\n\n    setIsFocusedState(true);\n  };\n\n  const handleOnBlurHook = (e) => {\n    let { onBlur } = props.inputProps;\n\n    setIsFocusedState(false);\n\n    if (e == null) {\n      return;\n    }\n\n    if (onBlur) {\n      onBlur(e);\n    }\n\n    if (addOnBlur) {\n      const tagInner = _makeTagHook(e.target.value);\n      _addTagsHook([tagInner]);\n    }\n  };\n\n  const handleRemoveHook = (tagInner) => {\n    _removeTagHook(tagInner);\n  };\n\n  const inputPropsHook = () => {\n    // eslint-disable-next-line\n    let { onChange, onFocus, onBlur, ...otherInputProps } = props.inputProps;\n\n    let propsInner = {\n      ...defaultInputProps,\n      ...otherInputProps,\n    };\n\n    if (disabled) {\n      propsInner.disabled = true;\n    }\n\n    return propsInner;\n  };\n\n  const inputValueHook = (propsInner) => {\n    return propsInner.currentValue || propsInner.inputValue || \"\";\n  };\n\n  const hasControlledInputHook = () => {\n    return (\n      typeof onChangeInput === \"function\" && typeof inputValue === \"string\"\n    );\n  };\n\n  let divClassName = className;\n  if (isFocusedState) {\n    divClassName = className + \" \" + focusedClassName;\n  }\n\n  let tagComponents = value.map((tag, index) => {\n    return renderTag({\n      key: index,\n      tag,\n      onRemove: handleRemoveHook,\n      disabled,\n      getTagDisplayValue: _getTagDisplayValueHook,\n      ...tagProps,\n    });\n  });\n\n  let inputComponent = renderInput({\n    ref: inputElementRef,\n    value: _tagHook(),\n    onPaste: handlePasteHook,\n    onKeyDown: handleKeyDownHook,\n    onChange: handleChangeHook,\n    onFocus: handleOnFocusHook,\n    onBlur: handleOnBlurHook,\n    addTag: addTagHook,\n    ...inputPropsHook(),\n  });\n  React.useImperativeHandle(ref, () => ({\n    _getDivElementRef: divElementRef.current,\n    _getInputElementRef: inputElementRef.current,\n    props: props,\n    _getTagState: tagState,\n\n    _getTagDisplayValue: (tagInner) => {\n      return _getTagDisplayValueHook(tagInner);\n    },\n\n    _makeTag: (tagInner) => {\n      return _makeTagHook(tagInner);\n    },\n\n    _removeTag: (indexInner) => {\n      _removeTagHook(indexInner);\n    },\n\n    _clearInput: () => {\n      _clearInputHook();\n    },\n\n    _tag: () => {\n      return _tagHook();\n    },\n\n    _addTags: (tagsInner) => {\n      return _addTagsHook(tagsInner);\n    },\n\n    _validate: (tagInner) => {\n      return _validateHook(tagInner);\n    },\n\n    _shouldPreventDefaultEventOnAdd: (addedInner, emptyInner, keyCodeInner) => {\n      return _shouldPreventDefaultEventOnAddHook(\n        addedInner,\n        emptyInner,\n        keyCodeInner\n      );\n    },\n\n    focus: () => {\n      focusHook();\n    },\n\n    blur: () => {\n      blurHook();\n    },\n\n    accept: () => {\n      return acceptHook();\n    },\n\n    addTag: (tagInner) => {\n      return addTagHook(tagInner);\n    },\n\n    clearInput: () => {\n      clearInputHook();\n    },\n\n    handlePaste: (e) => {\n      handlePasteHook(e);\n    },\n\n    handleKeyDown: (e) => {\n      handleKeyDownHook(e);\n    },\n\n    handleClick: (e) => {\n      handleClickHook(e);\n    },\n\n    handleChange: (e) => {\n      handleChangeHook(e);\n    },\n\n    handleOnFocus: (e) => {\n      handleOnFocusHook(e);\n    },\n\n    handleOnBlur: (e) => {\n      handleOnBlurHook(e);\n    },\n\n    handleRemove: (tagInner) => {\n      handleRemoveHook(tagInner);\n    },\n\n    inputProps: () => {\n      return inputPropsHook();\n    },\n\n    inputValue: (propsInner) => {\n      return inputValueHook(propsInner);\n    },\n\n    hasControlledInput: () => {\n      return hasControlledInputHook();\n    },\n  }));\n  return (\n    <div ref={divElementRef} onClick={handleClickHook} className={divClassName}>\n      {renderLayout(tagComponents, inputComponent)}\n    </div>\n  );\n});\n\nTagsInput.defaultProps = {\n  className: \"react-tagsinput\",\n  focusedClassName: \"react-tagsinput--focused\",\n  addKeys: [9, 13],\n  addOnBlur: false,\n  addOnPaste: false,\n  inputProps: {},\n  removeKeys: [8],\n  renderInput: defaultRenderInput,\n  renderTag: defaultRenderTag,\n  renderLayout: defaultRenderLayout,\n  pasteSplit: defaultPasteSplit,\n  tagProps: {\n    className: \"react-tagsinput-tag\",\n    classNameRemove: \"react-tagsinput-remove\",\n  },\n  onlyUnique: false,\n  maxTags: -1,\n  validate: () => true,\n  validationRegex: /.*/,\n  disabled: false,\n  tagDisplayProp: null,\n  preventSubmit: true,\n};\n\nTagsInput.propTypes = {\n  focusedClassName: PropTypes.string,\n  addKeys: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  ),\n  addOnBlur: PropTypes.bool,\n  addOnPaste: PropTypes.bool,\n  currentValue: PropTypes.string,\n  inputValue: PropTypes.string,\n  inputProps: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n  onChangeInput: PropTypes.func,\n  removeKeys: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  ),\n  renderInput: PropTypes.func,\n  renderTag: PropTypes.func,\n  renderLayout: PropTypes.func,\n  pasteSplit: PropTypes.func,\n  tagProps: PropTypes.object,\n  onlyUnique: PropTypes.bool,\n  value: PropTypes.array.isRequired,\n  maxTags: PropTypes.number,\n  validate: PropTypes.func,\n  validationRegex: PropTypes.instanceOf(RegExp),\n  disabled: PropTypes.bool,\n  tagDisplayProp: PropTypes.string,\n  preventSubmit: PropTypes.bool,\n};\n\nexport default TagsInput;\n"]},"metadata":{},"sourceType":"module"}