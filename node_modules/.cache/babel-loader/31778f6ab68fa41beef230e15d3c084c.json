{"ast":null,"code":"import _slicedToArray from \"C:/Users/PC/Desktop/UNICS_FE/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\UNICS_FE\\\\src\\\\layouts\\\\Admin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // react library for routing\n\nimport { useLocation, Route, Switch, Redirect } from 'react-router-dom'; // core components\n\nimport AdminNavbar from 'components/Navbars/AdminNavbar.js';\nimport AdminFooter from 'components/Footers/AdminFooter.js';\nimport Sidebar from 'components/Sidebar/Sidebar.js';\nimport routes from 'routes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Admin() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sidenavOpen = _React$useState2[0],\n      setSidenavOpen = _React$useState2[1];\n\n  var location = useLocation();\n  var mainContentRef = React.useRef(null);\n  React.useEffect(function () {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContentRef.current.scrollTop = 0;\n  }, [location]);\n\n  var getRoutes = function getRoutes(routes) {\n    return routes.map(function (prop, key) {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n\n      if (prop.layout === '/admin') {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: prop.layout + prop.path,\n          component: prop.component\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, _this);\n      } else {\n        return null;\n      }\n    });\n  };\n\n  var getBrandText = function getBrandText() {\n    for (var i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n\n    return 'Brand';\n  }; // toggles collapse between mini sidenav and normal\n\n\n  var toggleSidenav = function toggleSidenav() {\n    if (document.body.classList.contains('g-sidenav-pinned')) {\n      document.body.classList.remove('g-sidenav-pinned');\n      document.body.classList.add('g-sidenav-hidden');\n    } else {\n      document.body.classList.add('g-sidenav-pinned');\n      document.body.classList.remove('g-sidenav-hidden');\n    }\n\n    setSidenavOpen(!sidenavOpen);\n  };\n\n  var getNavbarTheme = function getNavbarTheme() {\n    return location.pathname.indexOf('admin/alternative-dashboard') === -1 ? 'dark' : 'light';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      routes: routes,\n      toggleSidenav: toggleSidenav,\n      sidenavOpen: sidenavOpen,\n      logo: {\n        innerLink: '/',\n        imgSrc: require('assets/img/brand/argon-react.png').default,\n        imgAlt: '...'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      ref: mainContentRef,\n      children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {\n        theme: getNavbarTheme(),\n        toggleSidenav: toggleSidenav,\n        sidenavOpen: sidenavOpen,\n        brandText: getBrandText(location.pathname)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [getRoutes(routes), /*#__PURE__*/_jsxDEV(Redirect, {\n          from: \"*\",\n          to: \"/admin/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), sidenavOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop d-xl-none\",\n      onClick: toggleSidenav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(Admin, \"qdVKEN/kuEV5eX1RR8F4MW5T5x4=\", false, function () {\n  return [useLocation];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/UNICS_FE/src/layouts/Admin.js"],"names":["React","useLocation","Route","Switch","Redirect","AdminNavbar","AdminFooter","Sidebar","routes","Admin","useState","sidenavOpen","setSidenavOpen","location","mainContentRef","useRef","useEffect","document","documentElement","scrollTop","scrollingElement","current","getRoutes","map","prop","key","collapse","views","layout","path","component","getBrandText","i","length","pathname","indexOf","name","toggleSidenav","body","classList","contains","remove","add","getNavbarTheme","innerLink","imgSrc","require","default","imgAlt"],"mappings":"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","sourcesContent":["import React from 'react';\n// react library for routing\nimport { useLocation, Route, Switch, Redirect } from 'react-router-dom';\n// core components\nimport AdminNavbar from 'components/Navbars/AdminNavbar.js';\nimport AdminFooter from 'components/Footers/AdminFooter.js';\nimport Sidebar from 'components/Sidebar/Sidebar.js';\n\nimport routes from 'routes.js';\n\nfunction Admin() {\n  const [sidenavOpen, setSidenavOpen] = React.useState(true);\n  const location = useLocation();\n  const mainContentRef = React.useRef(null);\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContentRef.current.scrollTop = 0;\n  }, [location]);\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === '/admin') {\n        return <Route path={prop.layout + prop.path} component={prop.component} key={key} />;\n      } else {\n        return null;\n      }\n    });\n  };\n  const getBrandText = () => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return 'Brand';\n  };\n  // toggles collapse between mini sidenav and normal\n  const toggleSidenav = () => {\n    if (document.body.classList.contains('g-sidenav-pinned')) {\n      document.body.classList.remove('g-sidenav-pinned');\n      document.body.classList.add('g-sidenav-hidden');\n    } else {\n      document.body.classList.add('g-sidenav-pinned');\n      document.body.classList.remove('g-sidenav-hidden');\n    }\n    setSidenavOpen(!sidenavOpen);\n  };\n  const getNavbarTheme = () => {\n    return location.pathname.indexOf('admin/alternative-dashboard') === -1 ? 'dark' : 'light';\n  };\n\n  return (\n    <>\n      <Sidebar\n        routes={routes}\n        toggleSidenav={toggleSidenav}\n        sidenavOpen={sidenavOpen}\n        logo={{\n          innerLink: '/',\n          imgSrc: require('assets/img/brand/argon-react.png').default,\n          imgAlt: '...',\n        }}\n      />\n      <div className=\"main-content\" ref={mainContentRef}>\n        <AdminNavbar theme={getNavbarTheme()} toggleSidenav={toggleSidenav} sidenavOpen={sidenavOpen} brandText={getBrandText(location.pathname)} />\n        <Switch>\n          {getRoutes(routes)}\n          <Redirect from=\"*\" to=\"/admin/dashboard\" />\n        </Switch>\n        <AdminFooter />\n      </div>\n      {sidenavOpen ? <div className=\"backdrop d-xl-none\" onClick={toggleSidenav} /> : null}\n    </>\n  );\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}